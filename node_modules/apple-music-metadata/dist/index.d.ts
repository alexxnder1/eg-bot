import { Document } from "domhandler";
import { AxiosResponse } from "axios";
export interface RawApplePlaylist {
    name: string;
    type: "playlist" | "album";
    author: string;
    tracks: tracks[];
}
export interface RawAppleSong {
    type?: "song";
    artist: string;
    title: string;
    album: string;
}
interface tracks {
    artist: string;
    title: string;
    album: string;
}
interface HalfSong {
    artist: string;
    album: string;
}
export interface HalfPlaylist {
    name: string;
    type: "playlist";
    author: string;
}
/**
 * @param {Document} document
 * @param {boolean} album
 * @returns {Promise<?RawApplePlaylist>}
 */
export declare function findJSONLD(document: Document, album?: boolean, fast?: boolean): Promise<RawApplePlaylist | HalfSong | HalfPlaylist | undefined>;
export declare function fastPlaylist(result: AxiosResponse<string, any>): Promise<{
    album: string;
    artist: string;
    title: string;
}[]>;
/**
 * @param {string} url
 * @returns {Promise<RawAppleSong>}
 */
export declare function getSong(url: string, playlist?: boolean): Promise<RawAppleSong | undefined>;
/**
 * @param {string} url
 * @returns {Promise<?RawApplePlaylist>}
 */
export declare function getPlaylist(url: string): Promise<RawApplePlaylist | undefined>;
/**
 * @param {string} url
 * @returns {Promise<Promise<RawApplePlaylist|RawAppleSong|undefined>>}
 */
export declare function autoGetApple(url: string): Promise<RawApplePlaylist | RawAppleSong | undefined>;
export {};
